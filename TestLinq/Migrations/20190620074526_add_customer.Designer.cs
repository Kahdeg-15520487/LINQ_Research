// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestLinq;

namespace TestLinq.Migrations
{
    [DbContext(typeof(TestDbContext))]
    [Migration("20190620074526_add_customer")]
    partial class add_customer
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TestLinq.Entity.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name");

                    b.Property<Guid>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Blogs");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5ef9c59-7271-4578-8509-f083e07c41b1"),
                            Name = "batanvlog",
                            UserId = new Guid("05fc2fca-6e54-49df-bd33-74fbf5ebcd25")
                        });
                });

            modelBuilder.Entity("TestLinq.Entity.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("City");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "W Smithfield, London EC1A 7BE",
                            City = "London",
                            Name = "Molly"
                        },
                        new
                        {
                            Id = 2,
                            Address = "221b Baker St",
                            City = "London",
                            Name = "Sherlock"
                        },
                        new
                        {
                            Id = 3,
                            Address = "10 Downing St",
                            City = "London",
                            Name = "Mycroft"
                        });
                });

            modelBuilder.Entity("TestLinq.Entity.Post", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<Guid>("BlogId");

                    b.Property<string>("Content");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("BlogId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("4081a340-75e6-4d8b-a78f-879ce15bcaf6"),
                            BlogId = new Guid("f5ef9c59-7271-4578-8509-f083e07c41b1"),
                            Content = "Cac chau oi ...",
                            Name = "100 canh ga chien nuoc mam"
                        });
                });

            modelBuilder.Entity("TestLinq.Entity.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("NEWID()");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05fc2fca-6e54-49df-bd33-74fbf5ebcd25"),
                            Name = "batan"
                        });
                });

            modelBuilder.Entity("TestLinq.Entity.Blog", b =>
                {
                    b.HasOne("TestLinq.Entity.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TestLinq.Entity.Post", b =>
                {
                    b.HasOne("TestLinq.Entity.Blog", "Blog")
                        .WithMany("Posts")
                        .HasForeignKey("BlogId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
